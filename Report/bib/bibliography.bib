@misc{deliberate_practice,
  author       = {Mary Brabeck, Jill Jeffrey Sara Fry},
  month        = {Unknown},
  year         = {2010},
  howpublished = {Available at \url{https://www.apa.org/education/k12/practice-acquisition} (24/02/2021)}
}

@misc{attention_interest,
  author       = {Judith M. Harackiewicz, Jessi L. Smith, Stacy J. Priniski},
  month        = {6},
  year         = {2016},
  howpublished = {Available at \url{https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5839644/} (24/02/2021)}
}

@article{backus_revised_1963,
	title = {Revised report on the algorithm language {ALGOL} 60},
	volume = {6},
	issn = {0001-0782, 1557-7317},
	url = {https://dl.acm.org/doi/10.1145/366193.366201},
	doi = {10.1145/366193.366201},
	pages = {1--17},
	number = {1},
	journaltitle = {Communications of the {ACM}},
	shortjournal = {Commun. {ACM}},
	author = {Backus, J. W. and Bauer, F. L. and Green, J. and Katz, C. and {McCarthy}, J. and Perlis, A. J. and Rutishauser, H. and Samelson, K. and Vauquois, B. and Wegstein, J. H. and van Wijngaarden, A. and Woodger, M.},
	editor = {Naur, P.},
	urldate = {2021-03-25},
	date = {1963-01},
	langid = {english},
}

@inproceedings{stefik_empirical_2011,
  location  = {New York, {NY}, {USA}},
  title     = {An empirical comparison of the accuracy rates of novices using the quorum, perl, and randomo programming languages},
  isbn      = {978-1-4503-1024-6},
  url       = {https://doi.org/10.1145/2089155.2089159},
  doi       = {10.1145/2089155.2089159},
  series    = {{PLATEAU} '11},
  abstract  = {We present here an empirical study comparing the accuracy rates of novices writing software in three programming languages: Quorum, Perl, and Randomo. The first language, Quorum, we call an evidence-based programming language, where the syntax, semantics, and {API} designs change in correspondence to the latest academic research and literature on programming language usability. Second, while Perl is well known, we call Randomo a Placebo-language, where some of the syntax was chosen with a random number generator and the {ASCII} table. We compared novices that were programming for the first time using each of these languages, testing how accurately they could write simple programs using common program constructs (e.g., loops, conditionals, functions, variables, parameters). Results showed that while Quorum users were afforded significantly greater accuracy compared to those using Perl and Randomo, Perl users were unable to write programs more accurately than those using a language designed by chance.},
  pages     = {3--8},
  booktitle = {Proceedings of the 3rd {ACM} {SIGPLAN} workshop on Evaluation and usability of programming languages and tools},
  publisher = {Association for Computing Machinery},
  author    = {Stefik, Andreas and Siebert, Susanna and Stefik, Melissa and Slattery, Kim},
  urldate   = {2021-03-08},
  date      = {2011-10-24},
  keywords  = {comprehension, intuitiveness, language reductionism, programming languages}
}

@article{papavlasopoulou_exploring_2019,
  title        = {Exploring children's learning experience in constructionism-based coding activities through design-based research},
  volume       = {99},
  issn         = {0747-5632},
  url          = {https://www.sciencedirect.com/science/article/pii/S0747563219300184},
  doi          = {10.1016/j.chb.2019.01.008},
  abstract     = {Over the last few years, the integration of coding activities for children in K-12 education has flourished. In addition, novel technological tools and programming environments have offered new opportunities and increased the need to design effective learning experiences. This paper presents a design-based research ({DBR}) approach conducted over two years, based on constructionism-based coding experiences for children, following the four stages of {DBR}. Three iterations (cycles) were designed and examined in total, with participants aged 8–17 years old, using mixed methods. Over the two years, we conducted workshops in which students used a block-based programming environment (i.e., Scratch) and collaboratively created a socially meaningful artifact (i.e., a game). The study identifies nine design principles that can help us to achieve higher engagement during the coding activity. Moreover, positive attitudes and high motivation were found to result in the better management of cognitive load. Our contribution lies in the theoretical grounding of the results in constructionism and the emerging design principles. In this way, we provide both theoretical and practical evidence of the value of constructionism-based coding activities.},
  pages        = {415--427},
  journaltitle = {Computers in Human Behavior},
  shortjournal = {Computers in Human Behavior},
  author       = {Papavlasopoulou, Sofia and Giannakos, Michail N. and Jaccheri, Letizia},
  urldate      = {2021-03-08},
  date         = {2019-10-01},
  langid       = {english},
  keywords     = {Children, Coding, Computational thinking, Constructionism, Design-based research, Engagement},
  file         = {ScienceDirect Full Text PDF:C\:\\Users\\Patrick\\Zotero\\storage\\ELHQZJN4\\Papavlasopoulou et al. - 2019 - Exploring children's learning experience in constr.pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\Patrick\\Zotero\\storage\\8EPFA265\\S0747563219300184.html:text/html}
}

@online{ScratchImagineProgram,
  title    = {Scratch - {{Imagine}}, {{Program}}, {{Share}}},
  url      = {https://scratch.mit.edu/},
  urldate  = {2021-03-07},
  abstract = {Scratch is a free programming language and online community where you can create your own interactive stories, games, and animations.},
  langid   = {american}
}


@online{ScratchImagineProgramStatistics,
  title    = {Scratch - {{Imagine}}, {{Program}}, {{Share}}},
  url      = {https://scratch.mit.edu/statistics/},
  urldate  = {2021-03-07},
  abstract = {Make games, stories and interactive art with Scratch. (scratch.mit.edu)}
}



@article{maloneyScratchProgrammingLanguage2010,
  title        = {The {{Scratch Programming Language}} and {{Environment}}},
  author       = {Maloney, John and Resnick, Mitchel and Rusk, Natalie and Silverman, Brian and Eastmond, Evelyn},
  date         = {2010-11},
  journaltitle = {ACM Transactions on Computing Education},
  shortjournal = {ACM Trans. Comput. Educ.},
  volume       = {10},
  pages        = {1--15},
  issn         = {1946-6226, 1946-6226},
  doi          = {10.1145/1868358.1868363},
  url          = {10.1145/1868358.1868363},
  urldate      = {2021-03-07},
  abstract     = {Scratch is a visual programming environment that allows users (primarily ages 8 to 16) to learn computer programming while working on personally meaningful projects such as animated stories and games. A key design goal of Scratch is to support self-directed learning through tinkering and collaboration with peers. This article explores how the Scratch programming language and environment support this goal.},
  file         = {C\:\\Users\\Christian\\Zotero\\storage\\RDQJ4X45\\maloney2010.pdf#view=FitH.pdf;C\:\\Users\\Christian\\Zotero\\storage\\SPTCNFGL\\Maloney et al_2010_The Scratch Programming Language and Environment.pdf;D\:\\Downloads\\Browser\\maloneyScratchProgrammingLanguage2010 - Extracted Annotations (372021, 125106 PM)The original design of Scratch was motivated by the needs and interests of.md},
  langid       = {english},
  number       = {4}
}



@online{CodeCombatCodingGames,
  title        = {{{CodeCombat}} - {{Coding}} Games to Learn {{Python}} and {{JavaScript}}},
  url          = {https://codecombat.com},
  urldate      = {2021-03-07},
  abstract     = {Learn typed code through a programming game. Learn Python, JavaScript, and HTML as you solve puzzles and learn to make your own coding games and websites.},
  file         = {C\:\\Users\\Christian\\Zotero\\storage\\937NS52J\\home.html},
  langid       = {english},
  organization = {{CodeCombat}}
}


@book{sebesta_concepts_2016,
  location  = {Boston},
  edition   = {Eleventh edition, global edition},
  title     = {Concepts of programming languages},
  isbn      = {978-1-292-10055-5},
  pagetotal = {785},
  publisher = {Pearson},
  author    = {Sebesta, Robert W.},
  editor    = {Mukherjee, Soumen and Bhattacharjee, Arup Kumar},
  date      = {2016},
  note      = {{OCLC}: 937950604}
}

@book{crafting_a_compiler,
  title = {Crafting a Compiler},
  author = {Fischer, Charles N. and Cytron, Ron K. and LeBlanc, Richard J.},
  date = {2010},
  publisher = {{Addison-Wesley}},
  location = {{Boston}},
  annotation = {OCLC: ocn268788318},
  isbn = {978-0-13-606705-4},
  keywords = {Compilers (Computer programs)},
  pagetotal = {683},
  series = {Crafting a Compiler with {{C}}}
}

@article{lahtinenStudyDifficultiesNovice2005,
  title = {A Study of the Difficulties of Novice Programmers},
  author = {Lahtinen, Essi and Ala-Mutka, Kirsti and Järvinen, Hannu-Matti},
  date = {2005-06-27},
  journaltitle = {ACM SIGCSE Bulletin},
  shortjournal = {SIGCSE Bull.},
  volume = {37},
  pages = {14--18},
  issn = {0097-8418},
  doi = {10/dwcj94},
  url = {https://doi.org/10.1145/1151954.1067453},
  urldate = {2021-04-01},
  abstract = {Programming is related to several fields of technology, and many university students are studying the basics of it. Unfortunately, they often face difficulties already on the basic courses. This work studies the difficulties in learning programming in order to support developing learning materials for basic programming courses. The difficulties have to be recognized to be able to aid learning and teaching in an effective way.An international survey of opinions was organized for more than 500 students and teachers. This paper analyses the results of the survey. The survey provides information of the difficulties experienced and perceived when learning and teaching programming. The survey results also provide basis for recommendations for developing learning materials and approaches.},
  keywords = {difficulties,learning,novices,programming,teaching},
  number = {3}
}

@article{mannilaWhatSimpleLanguage2006,
  title = {What about a Simple Language? {{Analyzing}} the Difficulties in Learning to Program},
  shorttitle = {What about a Simple Language?},
  author = {Mannila, Linda and Peltomäki, Mia and Salakoski, Tapio},
  date = {2006-09-01},
  journaltitle = {Computer Science Education},
  volume = {16},
  pages = {211--227},
  publisher = {{Routledge}},
  issn = {0899-3408},
  doi = {10/b2hzpf},
  url = {10/b2hzpf},
  urldate = {2021-04-01},
  abstract = {In this paper, we present the results from a two-part study. We analyze 60 programs written by novice programmers aged 16 – 19 after their first programming course, in either Java or Python. The aim is to find difficulties independent of the language used, and such originating from the language. Second, we analyze the transition from a “simple” language to a more “advanced” one, by following up on eight students, who learned programming in Python before moving on to Java. Our results suggest that a simple language gives rise to fewer syntax errors as well as logic errors. The qualitative part of our study did not reveal any disadvantages from having learned to program in a simple language when moving on to a more complex one. This suggests that not only can a simple language be used when introducing programming as a general skill, but also when providing basic skills to future professionals in the field.},
  annotation = {\_eprint: https://doi.org/10.1080/08993400600912384},
  number = {3}
}

@article{bosseWhyProgrammingDifficult2017,
  title = {Why Is Programming so Difficult to Learn? {{Patterns}} of {{Difficulties Related}} to {{Programming Learning Mid}}-{{Stage}}},
  shorttitle = {Why Is Programming so Difficult to Learn?},
  author = {Bosse, Yorah and Gerosa, Marco Aurélio},
  date = {2017-01-05},
  journaltitle = {ACM SIGSOFT Software Engineering Notes},
  shortjournal = {SIGSOFT Softw. Eng. Notes},
  volume = {41},
  pages = {1--6},
  issn = {0163-5948},
  doi = {10/ggm2xg},
  url = {https://doi.org/10.1145/3011286.3011301},
  urldate = {2021-04-01},
  abstract = {New software engineers and casual developers are needed in many different areas. However, students face many difficulties while learning the logic of computer programming, frequently failing in university courses. This Ph.D. research aims to identify difficulty patterns related to learning how to program, a crucial part of software engineers training. The research methodology comprises studies that put together results from a systematic literature review and empirical data collected from qualitative and quantitative studies. The difficulties identified will be compiled into a model, which may assist students in sharpening their focus, and teachers in preparing their lessons and teaching material, as well as researchers in employing methods and tools to support learning},
  keywords = {casual developer,novice,Patterns of problems,programming,software engineering education},
  number = {6}
}

@online{LearnProgrammingYouTube,
  title = {learn programming - YouTube},
  url = {https://www.youtube.com/},
  urldate = {2021-04-09},
  langid = {danish}
}

@online{PythonBeginners,
  title = {Python {{For Beginners}}},
  url = {https://www.python.org/about/gettingstarted/},
  urldate = {2021-04-09},
  abstract = {The official home of the Python Programming Language},
  langid = {english},
  organization = {{Python.org}}
}

@online{WhatPythonExecutive,
  title = {What Is {{Python}}? {{Executive Summary}}},
  shorttitle = {What Is {{Python}}?},
  url = {https://www.python.org/doc/essays/blurb/},
  urldate = {2021-04-12},
  abstract = {The official home of the Python Programming Language},
  file = {C\:\\Users\\Christian\\Zotero\\storage\\W6Z46P3U\\blurb.html},
  langid = {english},
  organization = {{Python.org}}
}

@book{parrDefinitiveANTLRReference2012,
  title = {The Definitive {{ANTLR}} 4 Reference},
  author = {Parr, Terence},
  date = {2012},
  publisher = {{The Pragmatic Bookshelf}},
  location = {{Dallas, Texas}},
  annotation = {OCLC: ocn802295434},
  isbn = {978-1-934356-99-9},
  keywords = {Java (Computer program language),Parsing (Computer grammar),Programming languages (Electronic computers),Syntax},
  pagetotal = {305},
  series = {The Pragmatic Programmers}
}

@misc{rider_test_coverage,
  author       = {JetBrains},
  month        = {3},
  year         = {2021},
  howpublished = {Available at \url{https://www.jetbrains.com/help/rider/Unit_Tests_Coverage_window.html} (03/05/2021)}
}

@misc{VisitorGuru,
	author = {Refactoring Guru},
	title = {Visitor},
	howpublished = {Available at \url{https://refactoring.guru/design-patterns/visitor}}
}

@book{huttelTransitionsTreesIntroduction2010,
  title = {Transitions and Trees: An Introduction to Structural Operational Semantics},
  shorttitle = {Transitions and Trees},
  author = {Hüttel, Hans},
  date = {2010},
  publisher = {{Cambridge University Press}},
  location = {{Cambridge ; New York}},
  annotation = {OCLC: ocn613308135},
  isbn = {978-0-521-19746-5 978-0-521-14709-5},
  keywords = {Programming languages (Electronic computers),Semantics},
  pagetotal = {272}
}

@misc{SemanWithApplications,
publisher = {Springer-Verlag London Limited},
series = {Undergraduate Topics in Computer Science.},
title = {Semantics with Applications: An Appetizer },
year = {2007},
booktitle = {Semantics with Applications: An Appetizer /},
edition = {Elektronisk udgave.},
isbn = {9781846286926},
keywords = {Computer science},
language = {eng},
author = {Nielson, Hanne Riis.},
address = {London},
}

@online{bonsaiheldin_grass_2016,
	title = {Grass Tileset 16x16},
	url = {https://opengameart.org/content/grass-tileset-16x16},
	titleaddon = {{OpenGameArt}.org},
	author = {Bonsaiheldin},
	urldate = {2021-05-24},
	date = {2016-07-29},
	note = {Publisher: {OpenGameArt}.org},
}

@online{noauthor_kenney_nodate,
	title = {Kenney • Roguelike/{RPG} pack},
	author = {KenneyNL},
	url = {https://www.kenney.nl/assets/roguelike-rpg-pack},
	urldate = {2021-05-24},
	date = {2015-03-20},
}

@manual{spo_course,
  title        = {Languages and Compiler Course, SWf21},
  author       = {Bent Thomsen}
}