//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/Mapper/Tools/Dev/Projects/p4/Code/Interpreter/Interpreter/Antlr\Dazel.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public partial class DazelLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, WS=6, IDENTIFIER=7, INT=8, FLOAT=9, 
		SCREEN=10, ENTITY=11, MOVE_PATTERN=12, MAP=13, ONSCREENENTERED=14, ENTITIES=15, 
		EXITS=16, DATA=17, PATTERN=18, L_PARANTHESIS=19, R_PARANTHESIS=20, L_BRACKET=21, 
		R_BRACKET=22, L_BRACES=23, R_BRACES=24, ASSIGN_OP=25, LESSTHAN_OP=26, 
		GREATERTHAN_OP=27, PLUS_OP=28, MINUS_OP=29, MULTIPLICATION_OP=30, DIVISION_OP=31, 
		QUOTATION_MARK=32;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "WS", "IDENTIFIER", "INT", "FLOAT", 
		"SCREEN", "ENTITY", "MOVE_PATTERN", "MAP", "ONSCREENENTERED", "ENTITIES", 
		"EXITS", "DATA", "PATTERN", "L_PARANTHESIS", "R_PARANTHESIS", "L_BRACKET", 
		"R_BRACKET", "L_BRACES", "R_BRACES", "ASSIGN_OP", "LESSTHAN_OP", "GREATERTHAN_OP", 
		"PLUS_OP", "MINUS_OP", "MULTIPLICATION_OP", "DIVISION_OP", "QUOTATION_MARK"
	};


	public DazelLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public DazelLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'repeat'", "'if'", "'.'", "','", null, null, null, null, 
		"'Screen '", "'Entity '", "'MovePattern '", "'Map '", "'OnScreenEntered '", 
		"'Entities '", "'Exits '", "'Data '", "'Pattern '", "'('", "')'", "'['", 
		"']'", "'{'", "'}'", "'='", "'<'", "'>'", "'+'", "'-'", "'*'", "'/'", 
		"'\"'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, "WS", "IDENTIFIER", "INT", "FLOAT", 
		"SCREEN", "ENTITY", "MOVE_PATTERN", "MAP", "ONSCREENENTERED", "ENTITIES", 
		"EXITS", "DATA", "PATTERN", "L_PARANTHESIS", "R_PARANTHESIS", "L_BRACKET", 
		"R_BRACKET", "L_BRACES", "R_BRACES", "ASSIGN_OP", "LESSTHAN_OP", "GREATERTHAN_OP", 
		"PLUS_OP", "MINUS_OP", "MULTIPLICATION_OP", "DIVISION_OP", "QUOTATION_MARK"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Dazel.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static DazelLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\"', '\xE0', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x6', '\a', 
		'U', '\n', '\a', '\r', '\a', '\xE', '\a', 'V', '\x3', '\a', '\x3', '\a', 
		'\x3', '\b', '\x3', '\b', '\a', '\b', ']', '\n', '\b', '\f', '\b', '\xE', 
		'\b', '`', '\v', '\b', '\x3', '\t', '\x6', '\t', '\x63', '\n', '\t', '\r', 
		'\t', '\xE', '\t', '\x64', '\x3', '\n', '\x6', '\n', 'h', '\n', '\n', 
		'\r', '\n', '\xE', '\n', 'i', '\x3', '\n', '\x3', '\n', '\x6', '\n', 'n', 
		'\n', '\n', '\r', '\n', '\xE', '\n', 'o', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', 
		'\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', 
		'\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', 
		'\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', 
		'\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', 
		'\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', '\x19', 
		'\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', 
		'\x3', '\x1C', '\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1E', '\x3', '\x1E', 
		'\x3', '\x1F', '\x3', '\x1F', '\x3', ' ', '\x3', ' ', '\x3', '!', '\x3', 
		'!', '\x2', '\x2', '\"', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', 
		'\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', 
		'\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', 
		'\x1F', '\x11', '!', '\x12', '#', '\x13', '%', '\x14', '\'', '\x15', ')', 
		'\x16', '+', '\x17', '-', '\x18', '/', '\x19', '\x31', '\x1A', '\x33', 
		'\x1B', '\x35', '\x1C', '\x37', '\x1D', '\x39', '\x1E', ';', '\x1F', '=', 
		' ', '?', '!', '\x41', '\"', '\x3', '\x2', '\x6', '\x5', '\x2', '\v', 
		'\f', '\xF', '\xF', '\"', '\"', '\x4', '\x2', '\x43', '\\', '\x63', '|', 
		'\x6', '\x2', '\x32', ';', '\x43', '\\', '\x61', '\x61', '\x63', '|', 
		'\x3', '\x2', '\x32', ';', '\x2', '\xE4', '\x2', '\x3', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x33', '\x3', '\x2', '\x2', '\x2', '\x2', '\x35', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x37', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x39', '\x3', '\x2', '\x2', '\x2', '\x2', ';', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '=', '\x3', '\x2', '\x2', '\x2', '\x2', '?', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x41', '\x3', '\x2', '\x2', '\x2', '\x3', '\x43', 
		'\x3', '\x2', '\x2', '\x2', '\x5', '\x45', '\x3', '\x2', '\x2', '\x2', 
		'\a', 'L', '\x3', '\x2', '\x2', '\x2', '\t', 'O', '\x3', '\x2', '\x2', 
		'\x2', '\v', 'Q', '\x3', '\x2', '\x2', '\x2', '\r', 'T', '\x3', '\x2', 
		'\x2', '\x2', '\xF', 'Z', '\x3', '\x2', '\x2', '\x2', '\x11', '\x62', 
		'\x3', '\x2', '\x2', '\x2', '\x13', 'g', '\x3', '\x2', '\x2', '\x2', '\x15', 
		'q', '\x3', '\x2', '\x2', '\x2', '\x17', 'y', '\x3', '\x2', '\x2', '\x2', 
		'\x19', '\x81', '\x3', '\x2', '\x2', '\x2', '\x1B', '\x8E', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', '\x93', '\x3', '\x2', '\x2', '\x2', '\x1F', '\xA4', 
		'\x3', '\x2', '\x2', '\x2', '!', '\xAE', '\x3', '\x2', '\x2', '\x2', '#', 
		'\xB5', '\x3', '\x2', '\x2', '\x2', '%', '\xBB', '\x3', '\x2', '\x2', 
		'\x2', '\'', '\xC4', '\x3', '\x2', '\x2', '\x2', ')', '\xC6', '\x3', '\x2', 
		'\x2', '\x2', '+', '\xC8', '\x3', '\x2', '\x2', '\x2', '-', '\xCA', '\x3', 
		'\x2', '\x2', '\x2', '/', '\xCC', '\x3', '\x2', '\x2', '\x2', '\x31', 
		'\xCE', '\x3', '\x2', '\x2', '\x2', '\x33', '\xD0', '\x3', '\x2', '\x2', 
		'\x2', '\x35', '\xD2', '\x3', '\x2', '\x2', '\x2', '\x37', '\xD4', '\x3', 
		'\x2', '\x2', '\x2', '\x39', '\xD6', '\x3', '\x2', '\x2', '\x2', ';', 
		'\xD8', '\x3', '\x2', '\x2', '\x2', '=', '\xDA', '\x3', '\x2', '\x2', 
		'\x2', '?', '\xDC', '\x3', '\x2', '\x2', '\x2', '\x41', '\xDE', '\x3', 
		'\x2', '\x2', '\x2', '\x43', '\x44', '\a', '=', '\x2', '\x2', '\x44', 
		'\x4', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\a', 't', '\x2', '\x2', 
		'\x46', 'G', '\a', 'g', '\x2', '\x2', 'G', 'H', '\a', 'r', '\x2', '\x2', 
		'H', 'I', '\a', 'g', '\x2', '\x2', 'I', 'J', '\a', '\x63', '\x2', '\x2', 
		'J', 'K', '\a', 'v', '\x2', '\x2', 'K', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'L', 'M', '\a', 'k', '\x2', '\x2', 'M', 'N', '\a', 'h', '\x2', '\x2', 
		'N', '\b', '\x3', '\x2', '\x2', '\x2', 'O', 'P', '\a', '\x30', '\x2', 
		'\x2', 'P', '\n', '\x3', '\x2', '\x2', '\x2', 'Q', 'R', '\a', '.', '\x2', 
		'\x2', 'R', '\f', '\x3', '\x2', '\x2', '\x2', 'S', 'U', '\t', '\x2', '\x2', 
		'\x2', 'T', 'S', '\x3', '\x2', '\x2', '\x2', 'U', 'V', '\x3', '\x2', '\x2', 
		'\x2', 'V', 'T', '\x3', '\x2', '\x2', '\x2', 'V', 'W', '\x3', '\x2', '\x2', 
		'\x2', 'W', 'X', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\b', '\a', '\x2', 
		'\x2', 'Y', '\xE', '\x3', '\x2', '\x2', '\x2', 'Z', '^', '\t', '\x3', 
		'\x2', '\x2', '[', ']', '\t', '\x4', '\x2', '\x2', '\\', '[', '\x3', '\x2', 
		'\x2', '\x2', ']', '`', '\x3', '\x2', '\x2', '\x2', '^', '\\', '\x3', 
		'\x2', '\x2', '\x2', '^', '_', '\x3', '\x2', '\x2', '\x2', '_', '\x10', 
		'\x3', '\x2', '\x2', '\x2', '`', '^', '\x3', '\x2', '\x2', '\x2', '\x61', 
		'\x63', '\t', '\x5', '\x2', '\x2', '\x62', '\x61', '\x3', '\x2', '\x2', 
		'\x2', '\x63', '\x64', '\x3', '\x2', '\x2', '\x2', '\x64', '\x62', '\x3', 
		'\x2', '\x2', '\x2', '\x64', '\x65', '\x3', '\x2', '\x2', '\x2', '\x65', 
		'\x12', '\x3', '\x2', '\x2', '\x2', '\x66', 'h', '\t', '\x5', '\x2', '\x2', 
		'g', '\x66', '\x3', '\x2', '\x2', '\x2', 'h', 'i', '\x3', '\x2', '\x2', 
		'\x2', 'i', 'g', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\x3', '\x2', '\x2', 
		'\x2', 'j', 'k', '\x3', '\x2', '\x2', '\x2', 'k', 'm', '\a', '\x30', '\x2', 
		'\x2', 'l', 'n', '\t', '\x5', '\x2', '\x2', 'm', 'l', '\x3', '\x2', '\x2', 
		'\x2', 'n', 'o', '\x3', '\x2', '\x2', '\x2', 'o', 'm', '\x3', '\x2', '\x2', 
		'\x2', 'o', 'p', '\x3', '\x2', '\x2', '\x2', 'p', '\x14', '\x3', '\x2', 
		'\x2', '\x2', 'q', 'r', '\a', 'U', '\x2', '\x2', 'r', 's', '\a', '\x65', 
		'\x2', '\x2', 's', 't', '\a', 't', '\x2', '\x2', 't', 'u', '\a', 'g', 
		'\x2', '\x2', 'u', 'v', '\a', 'g', '\x2', '\x2', 'v', 'w', '\a', 'p', 
		'\x2', '\x2', 'w', 'x', '\a', '\"', '\x2', '\x2', 'x', '\x16', '\x3', 
		'\x2', '\x2', '\x2', 'y', 'z', '\a', 'G', '\x2', '\x2', 'z', '{', '\a', 
		'p', '\x2', '\x2', '{', '|', '\a', 'v', '\x2', '\x2', '|', '}', '\a', 
		'k', '\x2', '\x2', '}', '~', '\a', 'v', '\x2', '\x2', '~', '\x7F', '\a', 
		'{', '\x2', '\x2', '\x7F', '\x80', '\a', '\"', '\x2', '\x2', '\x80', '\x18', 
		'\x3', '\x2', '\x2', '\x2', '\x81', '\x82', '\a', 'O', '\x2', '\x2', '\x82', 
		'\x83', '\a', 'q', '\x2', '\x2', '\x83', '\x84', '\a', 'x', '\x2', '\x2', 
		'\x84', '\x85', '\a', 'g', '\x2', '\x2', '\x85', '\x86', '\a', 'R', '\x2', 
		'\x2', '\x86', '\x87', '\a', '\x63', '\x2', '\x2', '\x87', '\x88', '\a', 
		'v', '\x2', '\x2', '\x88', '\x89', '\a', 'v', '\x2', '\x2', '\x89', '\x8A', 
		'\a', 'g', '\x2', '\x2', '\x8A', '\x8B', '\a', 't', '\x2', '\x2', '\x8B', 
		'\x8C', '\a', 'p', '\x2', '\x2', '\x8C', '\x8D', '\a', '\"', '\x2', '\x2', 
		'\x8D', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x8F', '\a', 'O', 
		'\x2', '\x2', '\x8F', '\x90', '\a', '\x63', '\x2', '\x2', '\x90', '\x91', 
		'\a', 'r', '\x2', '\x2', '\x91', '\x92', '\a', '\"', '\x2', '\x2', '\x92', 
		'\x1C', '\x3', '\x2', '\x2', '\x2', '\x93', '\x94', '\a', 'Q', '\x2', 
		'\x2', '\x94', '\x95', '\a', 'p', '\x2', '\x2', '\x95', '\x96', '\a', 
		'U', '\x2', '\x2', '\x96', '\x97', '\a', '\x65', '\x2', '\x2', '\x97', 
		'\x98', '\a', 't', '\x2', '\x2', '\x98', '\x99', '\a', 'g', '\x2', '\x2', 
		'\x99', '\x9A', '\a', 'g', '\x2', '\x2', '\x9A', '\x9B', '\a', 'p', '\x2', 
		'\x2', '\x9B', '\x9C', '\a', 'G', '\x2', '\x2', '\x9C', '\x9D', '\a', 
		'p', '\x2', '\x2', '\x9D', '\x9E', '\a', 'v', '\x2', '\x2', '\x9E', '\x9F', 
		'\a', 'g', '\x2', '\x2', '\x9F', '\xA0', '\a', 't', '\x2', '\x2', '\xA0', 
		'\xA1', '\a', 'g', '\x2', '\x2', '\xA1', '\xA2', '\a', '\x66', '\x2', 
		'\x2', '\xA2', '\xA3', '\a', '\"', '\x2', '\x2', '\xA3', '\x1E', '\x3', 
		'\x2', '\x2', '\x2', '\xA4', '\xA5', '\a', 'G', '\x2', '\x2', '\xA5', 
		'\xA6', '\a', 'p', '\x2', '\x2', '\xA6', '\xA7', '\a', 'v', '\x2', '\x2', 
		'\xA7', '\xA8', '\a', 'k', '\x2', '\x2', '\xA8', '\xA9', '\a', 'v', '\x2', 
		'\x2', '\xA9', '\xAA', '\a', 'k', '\x2', '\x2', '\xAA', '\xAB', '\a', 
		'g', '\x2', '\x2', '\xAB', '\xAC', '\a', 'u', '\x2', '\x2', '\xAC', '\xAD', 
		'\a', '\"', '\x2', '\x2', '\xAD', ' ', '\x3', '\x2', '\x2', '\x2', '\xAE', 
		'\xAF', '\a', 'G', '\x2', '\x2', '\xAF', '\xB0', '\a', 'z', '\x2', '\x2', 
		'\xB0', '\xB1', '\a', 'k', '\x2', '\x2', '\xB1', '\xB2', '\a', 'v', '\x2', 
		'\x2', '\xB2', '\xB3', '\a', 'u', '\x2', '\x2', '\xB3', '\xB4', '\a', 
		'\"', '\x2', '\x2', '\xB4', '\"', '\x3', '\x2', '\x2', '\x2', '\xB5', 
		'\xB6', '\a', '\x46', '\x2', '\x2', '\xB6', '\xB7', '\a', '\x63', '\x2', 
		'\x2', '\xB7', '\xB8', '\a', 'v', '\x2', '\x2', '\xB8', '\xB9', '\a', 
		'\x63', '\x2', '\x2', '\xB9', '\xBA', '\a', '\"', '\x2', '\x2', '\xBA', 
		'$', '\x3', '\x2', '\x2', '\x2', '\xBB', '\xBC', '\a', 'R', '\x2', '\x2', 
		'\xBC', '\xBD', '\a', '\x63', '\x2', '\x2', '\xBD', '\xBE', '\a', 'v', 
		'\x2', '\x2', '\xBE', '\xBF', '\a', 'v', '\x2', '\x2', '\xBF', '\xC0', 
		'\a', 'g', '\x2', '\x2', '\xC0', '\xC1', '\a', 't', '\x2', '\x2', '\xC1', 
		'\xC2', '\a', 'p', '\x2', '\x2', '\xC2', '\xC3', '\a', '\"', '\x2', '\x2', 
		'\xC3', '&', '\x3', '\x2', '\x2', '\x2', '\xC4', '\xC5', '\a', '*', '\x2', 
		'\x2', '\xC5', '(', '\x3', '\x2', '\x2', '\x2', '\xC6', '\xC7', '\a', 
		'+', '\x2', '\x2', '\xC7', '*', '\x3', '\x2', '\x2', '\x2', '\xC8', '\xC9', 
		'\a', ']', '\x2', '\x2', '\xC9', ',', '\x3', '\x2', '\x2', '\x2', '\xCA', 
		'\xCB', '\a', '_', '\x2', '\x2', '\xCB', '.', '\x3', '\x2', '\x2', '\x2', 
		'\xCC', '\xCD', '\a', '}', '\x2', '\x2', '\xCD', '\x30', '\x3', '\x2', 
		'\x2', '\x2', '\xCE', '\xCF', '\a', '\x7F', '\x2', '\x2', '\xCF', '\x32', 
		'\x3', '\x2', '\x2', '\x2', '\xD0', '\xD1', '\a', '?', '\x2', '\x2', '\xD1', 
		'\x34', '\x3', '\x2', '\x2', '\x2', '\xD2', '\xD3', '\a', '>', '\x2', 
		'\x2', '\xD3', '\x36', '\x3', '\x2', '\x2', '\x2', '\xD4', '\xD5', '\a', 
		'@', '\x2', '\x2', '\xD5', '\x38', '\x3', '\x2', '\x2', '\x2', '\xD6', 
		'\xD7', '\a', '-', '\x2', '\x2', '\xD7', ':', '\x3', '\x2', '\x2', '\x2', 
		'\xD8', '\xD9', '\a', '/', '\x2', '\x2', '\xD9', '<', '\x3', '\x2', '\x2', 
		'\x2', '\xDA', '\xDB', '\a', ',', '\x2', '\x2', '\xDB', '>', '\x3', '\x2', 
		'\x2', '\x2', '\xDC', '\xDD', '\a', '\x31', '\x2', '\x2', '\xDD', '@', 
		'\x3', '\x2', '\x2', '\x2', '\xDE', '\xDF', '\a', '$', '\x2', '\x2', '\xDF', 
		'\x42', '\x3', '\x2', '\x2', '\x2', '\b', '\x2', 'V', '^', '\x64', 'i', 
		'o', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
