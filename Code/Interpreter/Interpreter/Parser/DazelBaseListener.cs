//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Dazel.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IDazelListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class DazelBaseListener : IDazelListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStart([NotNull] DazelParser.StartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStart([NotNull] DazelParser.StartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.gameObject"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGameObject([NotNull] DazelParser.GameObjectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.gameObject"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGameObject([NotNull] DazelParser.GameObjectContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.empty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmpty([NotNull] DazelParser.EmptyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.empty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmpty([NotNull] DazelParser.EmptyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.gameObjectType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGameObjectType([NotNull] DazelParser.GameObjectTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.gameObjectType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGameObjectType([NotNull] DazelParser.GameObjectTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.gameObjectContents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGameObjectContents([NotNull] DazelParser.GameObjectContentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.gameObjectContents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGameObjectContents([NotNull] DazelParser.GameObjectContentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.gameObjectContent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGameObjectContent([NotNull] DazelParser.GameObjectContentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.gameObjectContent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGameObjectContent([NotNull] DazelParser.GameObjectContentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.contentType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContentType([NotNull] DazelParser.ContentTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.contentType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContentType([NotNull] DazelParser.ContentTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementList([NotNull] DazelParser.StatementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementList([NotNull] DazelParser.StatementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] DazelParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] DazelParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.repeatLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeatLoop([NotNull] DazelParser.RepeatLoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.repeatLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeatLoop([NotNull] DazelParser.RepeatLoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] DazelParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] DazelParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] DazelParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] DazelParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] DazelParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] DazelParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.sumExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSumExpression([NotNull] DazelParser.SumExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.sumExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSumExpression([NotNull] DazelParser.SumExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.factorExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactorExpression([NotNull] DazelParser.FactorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.factorExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactorExpression([NotNull] DazelParser.FactorExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.terminalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerminalExpression([NotNull] DazelParser.TerminalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.terminalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerminalExpression([NotNull] DazelParser.TerminalExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.sumOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSumOperation([NotNull] DazelParser.SumOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.sumOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSumOperation([NotNull] DazelParser.SumOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.factorOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactorOperation([NotNull] DazelParser.FactorOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.factorOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactorOperation([NotNull] DazelParser.FactorOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.functionInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionInvocation([NotNull] DazelParser.FunctionInvocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.functionInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionInvocation([NotNull] DazelParser.FunctionInvocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.memberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberAccess([NotNull] DazelParser.MemberAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.memberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberAccess([NotNull] DazelParser.MemberAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.valueList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueList([NotNull] DazelParser.ValueListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.valueList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueList([NotNull] DazelParser.ValueListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] DazelParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] DazelParser.ValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArray([NotNull] DazelParser.ArrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArray([NotNull] DazelParser.ArrayContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
