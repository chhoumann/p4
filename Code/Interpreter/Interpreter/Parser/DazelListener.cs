//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Dazel.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="DazelParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IDazelListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] DazelParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] DazelParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.game_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGame_object([NotNull] DazelParser.Game_objectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.game_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGame_object([NotNull] DazelParser.Game_objectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.empty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmpty([NotNull] DazelParser.EmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.empty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmpty([NotNull] DazelParser.EmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.game_object_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGame_object_type([NotNull] DazelParser.Game_object_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.game_object_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGame_object_type([NotNull] DazelParser.Game_object_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.game_object_contents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGame_object_contents([NotNull] DazelParser.Game_object_contentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.game_object_contents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGame_object_contents([NotNull] DazelParser.Game_object_contentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.game_object_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGame_object_content([NotNull] DazelParser.Game_object_contentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.game_object_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGame_object_content([NotNull] DazelParser.Game_object_contentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.content_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContent_type([NotNull] DazelParser.Content_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.content_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContent_type([NotNull] DazelParser.Content_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.statement_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement_list([NotNull] DazelParser.Statement_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.statement_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement_list([NotNull] DazelParser.Statement_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] DazelParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] DazelParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.repeat_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeat_loop([NotNull] DazelParser.Repeat_loopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.repeat_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeat_loop([NotNull] DazelParser.Repeat_loopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_statement([NotNull] DazelParser.If_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_statement([NotNull] DazelParser.If_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] DazelParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] DazelParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] DazelParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] DazelParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.sum_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSum_expression([NotNull] DazelParser.Sum_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.sum_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSum_expression([NotNull] DazelParser.Sum_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.factor_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor_expression([NotNull] DazelParser.Factor_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.factor_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor_expression([NotNull] DazelParser.Factor_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.terminal_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminal_expression([NotNull] DazelParser.Terminal_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.terminal_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminal_expression([NotNull] DazelParser.Terminal_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.sum_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSum_operation([NotNull] DazelParser.Sum_operationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.sum_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSum_operation([NotNull] DazelParser.Sum_operationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.factor_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor_operation([NotNull] DazelParser.Factor_operationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.factor_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor_operation([NotNull] DazelParser.Factor_operationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.function_invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_invocation([NotNull] DazelParser.Function_invocationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.function_invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_invocation([NotNull] DazelParser.Function_invocationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.member_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMember_access([NotNull] DazelParser.Member_accessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.member_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMember_access([NotNull] DazelParser.Member_accessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.value_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue_list([NotNull] DazelParser.Value_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.value_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue_list([NotNull] DazelParser.Value_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] DazelParser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] DazelParser.ValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray([NotNull] DazelParser.ArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray([NotNull] DazelParser.ArrayContext context);
}
