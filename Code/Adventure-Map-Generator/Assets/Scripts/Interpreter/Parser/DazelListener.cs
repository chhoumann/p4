//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Patrick/Documents/GitHub/p4/Code/Interpreter/Interpreter/Antlr\Dazel.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="DazelParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
public interface IDazelListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] DazelParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] DazelParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.gameObject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGameObject([NotNull] DazelParser.GameObjectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.gameObject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGameObject([NotNull] DazelParser.GameObjectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.gameObjectBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGameObjectBlock([NotNull] DazelParser.GameObjectBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.gameObjectBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGameObjectBlock([NotNull] DazelParser.GameObjectBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.empty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmpty([NotNull] DazelParser.EmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.empty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmpty([NotNull] DazelParser.EmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.gameObjectContents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGameObjectContents([NotNull] DazelParser.GameObjectContentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.gameObjectContents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGameObjectContents([NotNull] DazelParser.GameObjectContentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.gameObjectContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGameObjectContent([NotNull] DazelParser.GameObjectContentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.gameObjectContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGameObjectContent([NotNull] DazelParser.GameObjectContentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementList([NotNull] DazelParser.StatementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementList([NotNull] DazelParser.StatementListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.statementBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementBlock([NotNull] DazelParser.StatementBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.statementBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementBlock([NotNull] DazelParser.StatementBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] DazelParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] DazelParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.repeatLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeatLoop([NotNull] DazelParser.RepeatLoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.repeatLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeatLoop([NotNull] DazelParser.RepeatLoopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] DazelParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] DazelParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.statementExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementExpression([NotNull] DazelParser.StatementExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.statementExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementExpression([NotNull] DazelParser.StatementExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] DazelParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] DazelParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] DazelParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] DazelParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.sumExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSumExpression([NotNull] DazelParser.SumExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.sumExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSumExpression([NotNull] DazelParser.SumExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.factorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactorExpression([NotNull] DazelParser.FactorExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.factorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactorExpression([NotNull] DazelParser.FactorExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.terminalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminalExpression([NotNull] DazelParser.TerminalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.terminalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminalExpression([NotNull] DazelParser.TerminalExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.sumOperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSumOperation([NotNull] DazelParser.SumOperationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.sumOperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSumOperation([NotNull] DazelParser.SumOperationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.factorOperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactorOperation([NotNull] DazelParser.FactorOperationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.factorOperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactorOperation([NotNull] DazelParser.FactorOperationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.functionInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionInvocation([NotNull] DazelParser.FunctionInvocationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.functionInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionInvocation([NotNull] DazelParser.FunctionInvocationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.memberAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberAccess([NotNull] DazelParser.MemberAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.memberAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberAccess([NotNull] DazelParser.MemberAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.valueList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueList([NotNull] DazelParser.ValueListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.valueList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueList([NotNull] DazelParser.ValueListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] DazelParser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] DazelParser.ValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DazelParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray([NotNull] DazelParser.ArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DazelParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray([NotNull] DazelParser.ArrayContext context);
}
